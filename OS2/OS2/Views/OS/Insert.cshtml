@model OS2.Models.Process

@{
    ViewBag.Title = "Insert";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Insert</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Process</h4>
    <hr style="margin-top: 5px;">
    <div class="row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @for (int i = 0; i < Model.NumberOfProcess; i++)
        {<div class="col-sm-6">
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProList[i].ProcessId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProList[i].ProcessId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProList[i].ProcessId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProList[i].ProcessArrivalTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProList[i].ProcessArrivalTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProList[i].ProcessArrivalTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProList[i].ProcessBurstTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProList[i].ProcessBurstTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProList[i].ProcessBurstTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProList[i].ProcessPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProList[i].ProcessPriority, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProList[i].ProcessPriority, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            
        }
    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
